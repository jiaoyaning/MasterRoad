apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.jyn.helloworld'
/*
 * 一款支持自动将图片转换成WebP格式的Android构建插件
 * https://github.com/zh8637688/AndroidWebP-GradlePlugin
 */


/*
 * 配置构建 官方文档
 * https://developer.android.com/studio/build?hl=zh-cn
 *
 * 补齐Android技能树 - 玩转Gradle(一)
 * https://juejin.cn/post/6950643579643494431
 * 补齐Android技能树——从AGP构建过程到APK打包过程
 * https://juejin.cn/post/6963527524609425415
 * 补齐Android技能树 - 从害怕到玩转Android代码混淆
 * https://juejin.cn/post/6966526844552085512
 *
 * 玩转 Gradle，Plugin本质是什么？剖析个知名插件 TODO
 * https://mp.weixin.qq.com/s/XNJVXNZk_aMIVQsn16Dynw
 */
def app = rootProject.ext

android {
    compileSdkVersion app.compileSdkVersion
    buildToolsVersion app.buildToolsVersion

    defaultConfig {
        applicationId app.applicationId
        minSdkVersion app.minSdkVersion
        targetSdkVersion app.targetSdkVersion
        versionCode app.versionCode
        versionName app.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled  true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments.put("AROUTER_MODULE_NAME", project.getName())
                arguments.put("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    /*
     * R8编译器官方文档
     * https://developer.android.google.cn/studio/build/shrink-code
     *
     * Android 混淆，新引入的D8、R8改变了什么？
     * https://mp.weixin.qq.com/s/PxrW7LSDuAAeqlXFxnIInA
     */
    buildTypes {
        release {
            minifyEnabled true //R8 代码缩减功能
            shrinkResources true //缩减资源 : 资源缩减只有在与代码缩减配合使用时才能发挥作用
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*
     * kotlin-android-extensions插件被废弃，推荐使用viewBinding
     * https://mp.weixin.qq.com/s/keR7bO-Nu9bBr5Nhevbe1Q
     */
    buildFeatures {
        dataBinding true
        viewBinding true
//        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    kotlinOptions.useIR = true
}
/*
 * https://www.jianshu.com/p/cc98a6b4f52e
 * gradle 高级用法
 */
dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def test = app.test
    def androidx = app.androidx
    def kotlin = app.kotlin
    def http = app.http
    def utils = app.utils

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':java_kotlin')
    implementation project(path: ':Leetcode')
    implementation project(path: ':common')

    testImplementation test["junit"]
    androidTestImplementation test["ext-junit"]
    androidTestImplementation test["espresso-core"]
    androidTestImplementation test["espresso-contrib"]
    androidTestImplementation test["espresso-intents"]
    androidTestImplementation test["test-rules"]
    androidTestImplementation test["test-runner"]
    androidTestImplementation test["test:core"]
    androidTestImplementation test["test:core-ktx"]
    androidTestImplementation test["test.ext:truth"]

    implementation androidx["material"]
    implementation androidx["appcompat"]
    implementation androidx["annotation"]
    implementation androidx["startup"]
    implementation androidx["recyclerview"]
    implementation androidx["constraintlayout"]
    implementation androidx["lifecycle"]
    implementation androidx["lifecycle-process"]
    implementation androidx["viewmodel"]
    implementation androidx["livedata"]
    implementation androidx["core-ktx"]
    implementation androidx["viewmodel-ktx"]
    implementation androidx["livedata-ktx"]
    implementation androidx["runtime-ktx"]
    implementation androidx["activity-ktx"] //协程用得到
    implementation androidx["fragment-ktx"]
    implementation androidx["hilt"]
    kapt androidx["hilt-compiler"]
    implementation androidx["hilt-viewmodel"]
    kapt androidx["hilt-compiler2"]

    implementation kotlin["kotlin"]
    implementation kotlin["coroutines-core"]
    implementation kotlin["coroutines-android"]
    implementation kotlin["koin"]
    implementation kotlin["koin-android"]
    implementation kotlin["koin-android-ext"]
    implementation kotlin["reflect"]
    implementation kotlin["coil"]

    implementation http["okio"]
    implementation http["okhttp3"]
    implementation http["okhttp3-logging"]
    implementation http["retrofit2"]
    implementation http["retrofit2-scalars"]
    implementation http["retrofit2-gson"]
    implementation http["rxjava3"]
    implementation http["rxandroid3"]
    implementation http["rxhttp"]
    kapt http["rxhttp-compiler"]

    implementation utils["glide"]
    implementation utils["glide-integration"]
    annotationProcessor utils["glide-compiler"]
    implementation utils["ultimatebarx"]
    implementation utils["eventbus"]
    debugImplementation utils["leakcanary"]
    implementation utils["arouter"]
    annotationProcessor utils["arouter-compiler"]
    kapt utils["arouter-compiler"]

    //https://github.com/evant/binding-collection-adapter
    implementation utils["bindingcollectionadapter"]
    implementation utils["bindingcollectionadapter-recyclerview"]
    implementation utils["bindingcollectionadapter-viewpager2"]
}
