apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.jyn.helloworld'

apply from: '../timer.gradle'

/*
 * 配置构建 官方文档
 * https://developer.android.com/studio/build?hl=zh-cn
 */

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments.put("AROUTER_MODULE_NAME", project.getName())
                arguments.put("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    /*
     * R8编译器官方文档
     * https://developer.android.google.cn/studio/build/shrink-code
     */
    buildTypes {
        release {
            minifyEnabled true //R8 代码缩减功能
            shrinkResources true //缩减资源 : 资源缩减只有在与代码缩减配合使用时才能发挥作用
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*
     * kotlin-android-extensions插件被废弃，推荐使用viewBinding
     * https://mp.weixin.qq.com/s/keR7bO-Nu9bBr5Nhevbe1Q
     */
    buildFeatures {
        dataBinding true
        viewBinding true
//        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
/*
 *
 * https://www.jianshu.com/p/cc98a6b4f52e
 * gradle 高级用法
 *
 */
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0-alpha2'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation 'com.apkfuns.logutils:library:1.7.5'


    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation project(path: ':java_kotlin')
    implementation project(path: ':Leetcode')
    implementation project(path: ':common')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation rootProject.ext.androidx["androidx.test.ext-junit"]
    androidTestImplementation rootProject.ext.androidx["androidx.test.espresso:espresso-core"]

    implementation 'com.android.support:recyclerview-v7:28.0.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'

    implementation 'com.squareup.okio:okio:2.2.2'
    implementation 'com.squareup.okhttp3:okhttp:3.14.7'

    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'org.greenrobot:eventbus:3.2.0'

    // Replace with the latest version
    implementation 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    kapt 'com.alibaba:arouter-compiler:1.2.2'

    implementation 'com.google.dagger:hilt-android:2.28-alpha'
    kapt 'com.google.dagger:hilt-android-compiler:2.28-alpha'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.github.bumptech.glide:okhttp3-integration:4.3.1'


    implementation "androidx.startup:startup-runtime:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.72"

    //https://github.com/evant/binding-collection-adapter
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:4.0.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:4.0.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-viewpager2:4.0.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    /*
     * https://developer.android.google.cn/topic/libraries/architecture/datastore
     */
    implementation "androidx.datastore:datastore-core:1.0.0-alpha06"


    /*
     * Kotlin 的依赖注入框架
     * https://insert-koin.io/docs/quickstart/kotlin
     */
    implementation "org.koin:koin-core:$koin_version"   // Koin for Kotlin apps

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'


//    /**
//     * https://mp.weixin.qq.com/s/vNf9rDt3RxDPVacR9-e7Yw
//     */
//    def fragment_version = "1.2.5"
//    // Java language implementation
//    implementation "androidx.fragment:fragment:$fragment_version"
//    // Kotlin
//    implementation "androidx.fragment:fragment-ktx:$fragment_version"
}
