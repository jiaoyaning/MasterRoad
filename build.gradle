apply plugin: 'com.alibaba.arouter'
/*
 * Android gradle 脚本断点调试
 * https://www.jianshu.com/p/0c7d5fd5792d
 *
 * 最大程度提升你的Android Studio 中Gradle编译速度完全攻略
 * https://crazymo.blog.csdn.net/article/details/105188273
 *
 * Github Actions 使用指南和Android 持续集成示例
 * https://blog.csdn.net/xx326664162/article/details/103921480
 *
 * 一篇文章基本看懂gradle & 一篇文章深入gradle:依赖机制
 * https://mp.weixin.qq.com/s/1Epgk-SGke4RMrf0IzMzMw
 * https://mp.weixin.qq.com/s/m_v92yrqoq4jkUQfU9_7Pg
 *
 * Kyson/AndroidGodEye TODO 待接入
 * https://github.com/Kyson/AndroidGodEye/blob/master/README_zh.md
 */
buildscript {
    apply from: "config.gradle"
    apply from: "utils.gradle.kts"

//    printlnAllTask.invoke() //打印全部task
//    println("=> addRH: ${getExtensions().getExtraProperties().get("addRH")}")
//    println("=> addRH: ${addRH}")
//    addRepos.(repositories)   //config.gradle中方法
    addRH2.invoke(repositories)//utils.gradle.kts中方法

    /**
     * 我们升级适配完Android Gradle Plugin 7.0
     * https://mp.weixin.qq.com/s/kwG40yN0kbibRAb_dDBc6w
     */
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.37'
        classpath "com.alibaba:arouter-register:1.0.2"

        //该插件在plugin model下，需要执行publishGreetingPluginPublicationToMavenLocal Task 上传该插件，项目内才可使用
//        classpath "com.jyn.plugins:HelloWorld:1.0"
        /**
         * https://github.com/google/protobuf-gradle-plugin/
         */
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'

        /**
         * 提高 ARouter 的初始化速度
         * https://github.com/alibaba/ARouter
         */
        classpath "com.alibaba:arouter-register:1.0.2"
        /**
         * 饿了么字节码hook库
         * https://github.com/eleme/lancet
         */
//        classpath 'me.ele:lancet-plugin:1.0.6'
//        classpath 'io.github.didi.dokit:dokitx-plugin:3.5.0'
    }
}

allprojects {
    addRH.call(repositories)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

afterEvaluate {
    println("2. 第二执行的Gradle文件 -> ${getLogMsg.invoke(getClass())}")
}