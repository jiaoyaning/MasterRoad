// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
apply plugin: 'com.alibaba.arouter'
/*
 * 最大程度提升你的Android Studio 中Gradle编译速度完全攻略
 * https://crazymo.blog.csdn.net/article/details/105188273
 *
 * 读书笔记--Android Gradle权威指南
 * https://www.cnblogs.com/dasusu/p/9085174.html
 * https://www.cnblogs.com/dasusu/p/9095738.html
 *
 * Github Actions 使用指南和Android 持续集成示例
 * https://blog.csdn.net/xx326664162/article/details/103921480
 *
 * 一篇文章基本看懂gradle & 一篇文章深入gradle:依赖机制 TODO
 * https://mp.weixin.qq.com/s/1Epgk-SGke4RMrf0IzMzMw
 * https://mp.weixin.qq.com/s/m_v92yrqoq4jkUQfU9_7Pg
 */
buildscript {

    ext {
        kotlin_version = '1.4.31'
    }
    /*
     * 华为镜像
     * https://mirrors.huaweicloud.com/
     */
    repositories {
        mavenLocal() //本地插件上传仓库
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.33-beta'
        classpath "com.alibaba:arouter-register:1.0.2"

        //该插件在plugin model下，需要执行publishGreetingPluginPublicationToMavenLocal Task 上传该插件，项目内才可使用
        classpath "com.jyn.plugins:HelloWorld:1.0"
        /**
         * https://github.com/google/protobuf-gradle-plugin/
         */
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    }
}

allprojects {
    repositories {
        mavenLocal() //本地插件上传仓库
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

afterEvaluate {
    println("2. 插入第二顺位想插入的代码")
}