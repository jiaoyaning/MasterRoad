/**
 * MVVM+组件化+Arouter实现
 * https://mp.weixin.qq.com/s/l-wU8jQ-veide8oliqjS_g
 *
 * @see ExtraPropertiesExtension
 */
ext {
    kotlin_version = '1.7.21'
    gradle_version = "7.2.1"
    compileSdk = 33
    buildToolsVersion = "33.0.0"
    applicationId = "com.jyn.masterroad"
    applicationId_ipc = "com.jyn.masterroad_ipc"
    minSdkVersion = 21
    targetSdkVersion = 33
    versionCode = 1
    versionName = "1.0.0"
    compose = "latest.integration"

    //test
    test_version = "latest.release"
    espresso = "latest.release"
    powermock = "latest.release"

    activity_version = "latest.release"
    fragment_version = "latest.release"
    koin = "latest.release"
    coroutines = 'latest.integration'
    hilt = "latest.release"
    anko = "latest.release"
    glide = "latest.integration"
    fresco = "latest.integration"
    lifecycle = "latest.integration"
    startup = "latest.integration"
    recyclerview = "latest.integration"
    bindingcollectionadapter = "latest.integration"
    /*
     * https://developer.android.com/training/testing/espresso/setup
     *
     * 测试单个应用的界面 & Espresso Intent 单独测试 Activity
     * https://developer.android.com/training/testing/ui-testing/espresso-testing#intents
     *
     * 官方源码
     * https://github.com/android/android-test
     */
    test = [
            //断言
            "junit"                         : "junit:junit:4.12",
            //断言匹配规则
            "hamcrest-all"                  : "org.hamcrest:hamcrest-all:1.3",
            //测试类模拟
            "mockito-core"                  : "org.mockito:mockito-core:4.4.0",
            //拓展mockito，使其支持mock static方法、private方法、final方法与类等等
            "powermock-module-junit4"       : "org.powermock:powermock-module-junit4:2.0.9",
            "powermock-module-junit4-rule"  : "org.powermock:powermock-module-junit4-rule:2.0.9",
            "powermock-api-mockito2"        : "org.powermock:powermock-api-mockito2:2.0.9",
            "powermock-classloading-xstream": "org.powermock:powermock-classloading-xstream:2.0.9",
            //实现一套JVM能运行的Android代码，从而做到脱离Android运行环境进行测试
            "robolectric"                   : "org.robolectric:robolectric:4.7.3",
    ]

    androidTest = [
            "ext-junit"       : "androidx.test.ext:junit:1.1.2",
            "ext:junit-ktx"   : "androidx.test.ext:junit-ktx:1.1.2",
            "espresso-core"   : "androidx.test.espresso:espresso-core:$espresso",
            "espresso-contrib": "androidx.test.espresso:espresso-contrib:$espresso",
            "espresso-intents": "androidx.test.espresso:espresso-intents:$espresso",
            "test-runner"     : "androidx.test:runner:$test_version",
            "test-rules"      : "androidx.test:rules:$test_version",
            "test:core"       : "androidx.test:core:$test_version",
            "test:core-ktx"   : "androidx.test:core-ktx:$test_version",
            "test.ext:truth"  : "androidx.test.ext:truth:$test_version",
            /*
             * An Espresso IdlingResource for OkHttp.
             * https://github.com/JakeWharton/okhttp-idling-resource
             */
            "okhttp3-idling"  : "com.jakewharton.espresso:okhttp3-idling-resource:1.0.0"
    ]

    //androidx支持库配置
    androidx = [
            /*
             * Material Components之旅
             * https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzAxNzMxNzk5OQ==&action=getalbum&album_id=1567168071180566530&scene=173&subscene=93&sessionid=1617694420&enterid=1617696172&from_msgid=2649487491&from_itemidx=1&count=3&nolastread=1#wechat_redirect
             * https://github.com/material-components/material-components-android
             * 官方文档：https://material.io/components
             * 使用 Material Design 组件实现 Material 动效
             * https://mp.weixin.qq.com/s/Op-9rXQ9jiyI5I2TLpWKNA
             */
            "material"           : "com.google.android.material:material:latest.integration",
            "appcompat"          : "androidx.appcompat:appcompat:latest.integration",
            "annotation"         : "androidx.annotation:annotation:latest.integration",
            "asynclayoutinflater": "androidx.asynclayoutinflater:asynclayoutinflater:latest.integration",
            /*
             * 一文带你了解Lifecycle（使用篇）
             * https://mp.weixin.qq.com/s/TmI0O4OsvdD6DHkLm9EiiQ
             * https://developer.android.google.cn/jetpack/androidx/releases/lifecycle
             */
//            "lifecycle-compiler" : "androidx.lifecycle:lifecycle-compiler:$lifecycle",
            "lifecycle-process"  : "androidx.lifecycle:lifecycle-process:$lifecycle",
            "lifecycle"          : "androidx.lifecycle:lifecycle-runtime:$lifecycle",
            "viewmodel"          : "androidx.lifecycle:lifecycle-viewmodel:$lifecycle",
            "livedata"           : "androidx.lifecycle:lifecycle-livedata:$lifecycle",
            /*
             * 将 Kotlin 协程与架构组件一起使用
             * https://developer.android.google.cn/topic/libraries/architecture/coroutines
             *
             * https://developer.android.google.cn/kotlin/ktx
             *
             * 官方新出的 Kotlin 扩展库 KTX，到底帮你干了什么？
             * https://www.cnblogs.com/plokmju/p/8426176.html
             *
             * KTX 扩展程序列表
             * https://developer.android.google.cn/kotlin/ktx/extensions-list
             */
            "viewmodel-ktx"      : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle",
            "runtime-ktx"        : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle",
            "livedata-ktx"       : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle",
            "activity-ktx"       : "androidx.activity:activity-ktx:$activity_version",
            "fragment-ktx"       : "androidx.fragment:fragment-ktx:$fragment_version",
            "core-ktx"           : "androidx.core:core-ktx:1.6.0",

            "startup"            : "androidx.startup:startup-runtime:$startup",
            "recyclerview"       : "androidx.recyclerview:recyclerview:$recyclerview",
            "constraintlayout"   : "androidx.constraintlayout:constraintlayout:latest.integration",
            "cardview"           : "androidx.cardview:cardview:latest.integration",
            "navigation-fragment": "androidx.navigation:navigation-fragment:latest.integration",
            "navigation-ui"      : "androidx.navigation:navigation-ui:latest.integration",
            // https://developer.android.google.cn/topic/libraries/architecture/datastore
            "datastore"          : "androidx.datastore:datastore-core:1.0.0-alpha06",
            // 全新的 Fragment: 使用新的状态管理器 : https://mp.weixin.qq.com/s/vNf9rDt3RxDPVacR9-e7Yw
            "fragment"           : "androidx.fragment:fragment:$fragment_version", //Java
            "activity"           : "androidx.activity:activity:$activity_version", //Java
            /**
             * https://developer.android.google.cn/training/dependency-injection/hilt-android?hl=zh_cn
             */
            "hilt"               : "com.google.dagger:hilt-android:$hilt",
            "hilt-compiler"      : "com.google.dagger:hilt-android-compiler:$hilt",
            "hilt-compiler2"     : "androidx.hilt:hilt-compiler:latest.integration",
    ]


    kotlinList = [
            "kotlin"            : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            // Kotlin协程不属于Kotlin语言本身，所以需要手动引入
            "coroutines-core"   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines",
            "coroutines-android": "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines",
            //兼容jdk8 的 CompletableFuture ； Stream to flow ;
            "coroutines-jdk8"   : "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutines",
            /**
             * https://github.com/Kotlin/anko
             */
            "anko"              : "org.jetbrains.anko:anko-commons:$anko",
            /*
             * Kotlin 的依赖注入框架
             * https://insert-koin.io/docs/quickstart/kotlin
             */
            "koin"              : "io.insert-koin:koin-core:$koin",
            // Koin main features for Android (Scope,ViewModel ...)
            "koin-android"      : "io.insert-koin:koin-android:$koin",
            "koin-android-ext"  : "io.insert-koin:koin-android-ext:$koin",
            /*
             * kotlin 反射 官网
             * http://www.kotlincn.net/docs/reference/reflection.html
             */
            "reflect"           : "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            /*
            * Coil是一个Android图片加载库，通过Kotlin协程的方式加载图片
            * https://github.com/coil-kt/coil/
            *
            * Coil：为Kotlin而生的图片加载框架
            * https://mp.weixin.qq.com/s/qUYqylh8ceiFtKaKm02j4Q
            */
            "coil"              : "io.coil-kt:coil:latest.integration",
    ]

    http = [
            "okio"             : "com.squareup.okio:okio:+",
            /**
             * https://square.github.io/retrofit/
             */
            "retrofit2"        : "com.squareup.retrofit2:retrofit:+",
            "retrofit2-scalars": "com.squareup.retrofit2:converter-scalars:+",
            "retrofit2-gson"   : "com.squareup.retrofit2:converter-gson:+",
            "retrofit2-rxjava3": "com.squareup.retrofit2:adapter-rxjava3:+",
            /**
             * https://github.com/ReactiveX/RxJava
             * https://github.com/ReactiveX/RxAndroid
             * https://github.com/trello/RxLifecycle
             */
            "rxjava3"          : "io.reactivex.rxjava3:rxjava:+",
            "rxandroid3"       : "io.reactivex.rxjava3:rxandroid:+",
            "okhttp3"          : "com.squareup.okhttp3:okhttp:+",
            "okhttp3-logging"  : "com.squareup.okhttp3:logging-interceptor:+",

            /*
             * 网络请求框架
             * https://github.com/liujingxing/okhttp-RxHttp
             */
            "rxhttp"           : "com.ljx.rxhttp:rxhttp:2.5.6",
            "rxhttp-compiler"  : "com.ljx.rxhttp:rxhttp-compiler:2.5.6",

            /*
             * ktor kotlin官方请求框架
             * https://ktor.io/docs/getting-started-ktor-client.html
             */
            "ktor-core"        : "io.ktor:ktor-client-core:1.6.0",
            "ktor-cio"         : "io.ktor:ktor-client-cio:1.6.0",
            "cronet"           : "com.google.android.gms:play-services-cronet:17.0.1"
    ]

    utils = [
            "logutils"                             : "com.apkfuns.logutils:library:1.7.5",
            "eventbus"                             : "org.greenrobot:eventbus:3.2.0",
            "arouter"                              : "com.alibaba:arouter-api:1.5.2",
            "arouter-compiler"                     : "com.alibaba:arouter-compiler:1.5.2",

            /**
             * 官网：https://github.com/bumptech/glide
             * 文档：https://muyangmin.github.io/glide-docs-cn/
             */
            "glide"                                : "com.github.bumptech.glide:glide:$glide",
            "glide-compiler"                       : "com.github.bumptech.glide:compiler:$glide",
            "glide-integration"                    : "com.github.bumptech.glide:okhttp3-integration:$glide",

            /**
             * 官网：https://github.com/facebook/fresco
             * 文档：https://www.fresco-cn.org/docs/index.html
             */
            "fresco"                               : "com.facebook.fresco:fresco:$fresco",

            /*
             * 一款方便的设置状态栏和导航栏的各种效果的框架
             * https://github.com/Zackratos/UltimateBarX
             * https://juejin.cn/post/6903165109485436935
             */
            "ultimatebarx"                         : "com.zackratos.ultimatebarx:ultimatebarx:+",

            /*
             * https://github.com/Tencent/MMKV
             */
            "mmkv"                                 : "com.tencent:mmkv-static:+",

            /*
             * https://github.com/square/moshi
             */
            "moshi"                                : "com.squareup.moshi:moshi-kotlin:+",

            /**
             * 简单的 API 实现 DataBinding 和 ViewBinding
             * https://github.com/hi-dhl/Binding
             */

            /**
             * https://github.com/evant/binding-collection-adapter
             */
            "bindingcollectionadapter"             : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:$bindingcollectionadapter",
            "bindingcollectionadapter-recyclerview": "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:$bindingcollectionadapter",
            "bindingcollectionadapter-viewpager2"  : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-viewpager2:$bindingcollectionadapter",

            /**
             * https://github.com/bytedance/CodeLocator
             */
//            "codelocator"                          : "com.bytedance.tools.codelocator:codelocator-core:1.0.0",

    ]

    /**
     * 官方教程：https://developer.android.google.cn/jetpack/compose
     */
    composeList = [
            /**
             * 将 Android Studio 与 Jetpack Compose 配合使用
             * https://developer.android.google.cn/jetpack/compose/setup
             */
            "ui"                         : "androidx.compose.ui:ui:latest.integration",
            "ui-tooling"                 : "androidx.compose.ui:ui-tooling:latest.integration",
            // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
            "foundation"                 : "androidx.compose.foundation:foundation:latest.integration",
            // Material Design
            "material"                   : "androidx.compose.material:material:latest.integration",
            "material-icons-core"        : "androidx.compose.material:material-icons-core:latest.integration",
            "material-icons-extended"    : "androidx.compose.material:material-icons-extended:latest.integration",
            "activity-compose"           : "androidx.activity:activity-compose:latest.integration",
            "lifecycle-viewmodel-compose": "androidx.lifecycle:lifecycle-viewmodel-compose:latest.integration",
            "runtime-livedata"           : "androidx.compose.runtime:runtime-livedata:latest.integration",
//            "runtime-rxjava2"            : "androidx.compose.runtime:runtime-rxjava2:1.0.5",
            "ui-test-junit4"             : "androidx.compose.ui:ui-test-junit4:latest.integration",
    ]
}

static def addRepos(RepositoryHandler handler) {
//    handler.mavenCentral()
    handler.mavenLocal() //本地插件上传仓库
    handler.google()
    handler.maven { url 'https://maven.aliyun.com/repository/public' }
    handler.maven { url 'https://maven.aliyun.com/repository/central' }
//    handler.maven { url 'https://maven.aliyun.com/repository/google' }
    handler.maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
}

ext.addRepos = this.&addRepos //直接闭包.call()方法可以省略这样赋值的过程

